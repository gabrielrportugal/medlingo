/* Container principal do quiz */
.container {
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  gap: 2rem;
  animation: fadeIn 0.8s ease-out;
}

/* Cabe√ßalho com pontua√ß√£o */
.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
  animation: slideUp 0.6s ease-out;
}

.scoreContainer {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.score {
  background: linear-gradient(135deg, var(--warning-yellow), #f6ad55);
  color: var(--primary-blue);
  font-size: 1.25rem;
  font-weight: 700;
  padding: 0.75rem 1.5rem;
  border-radius: 50px;
  box-shadow: var(--card-shadow);
  position: relative;
  overflow: hidden;
  min-width: 120px;
  text-align: center;
  transition: var(--transition);
}

/* Anima√ß√£o para atualiza√ß√£o da pontua√ß√£o */
.score.updated {
  animation: scoreUpdate 0.6s cubic-bezier(0.68, -0.55, 0.265, 1.55);
}

@keyframes scoreUpdate {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.2) rotate(5deg);
  }
  100% {
    transform: scale(1);
  }
}

/* Card da pergunta */
.questionCard {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: var(--border-radius);
  padding: 2.5rem;
  box-shadow: var(--card-shadow);
  border: 1px solid rgba(255, 255, 255, 0.2);
  text-align: center;
  position: relative;
  overflow: hidden;
  animation: slideUp 0.8s ease-out 0.2s both;
}

.questionCard::before {
  content: '‚ùì';
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 1.5rem;
  opacity: 0.3;
}

.questionTitle {
  font-size: 1.125rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: var(--warning-yellow);
  opacity: 0.9;
}

.questionText {
  font-size: clamp(1.5rem, 4vw, 2.25rem);
  font-weight: 700;
  color: var(--white);
  margin: 0;
  line-height: 1.3;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
}

/* Grid de op√ß√µes */
.optionsGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 1rem;
  margin: 2rem 0;
}

/* Bot√µes de op√ß√£o */
.optionButton {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(5px);
  color: var(--white);
  border: 2px solid rgba(255, 255, 255, 0.2);
  border-radius: var(--border-radius);
  padding: 1.25rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  position: relative;
  overflow: hidden;
  min-height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  text-align: center;
  line-height: 1.4;
  animation: slideUp 0.6s ease-out both;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

/* Anima√ß√£o escalonada para os bot√µes */
.optionButton:nth-child(1) { animation-delay: 0.1s; }
.optionButton:nth-child(2) { animation-delay: 0.2s; }
.optionButton:nth-child(3) { animation-delay: 0.3s; }
.optionButton:nth-child(4) { animation-delay: 0.4s; }
.optionButton:nth-child(5) { animation-delay: 0.5s; }

.optionButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
  transition: left 0.5s;
}

.optionButton:hover::before {
  left: 100%;
}

.optionButton:hover {
  transform: translateY(-2px) scale(1.02);
  border-color: rgba(255, 255, 255, 0.4);
  background: rgba(255, 255, 255, 0.15);
  box-shadow: var(--hover-shadow);
}

.optionButton:active {
  transform: translateY(0) scale(0.98);
  animation: pulse 0.2s ease-in-out;
}

.optionButton:disabled {
  cursor: not-allowed;
  opacity: 0.7;
}

/* Estados de resposta */
.optionButton.correct {
  background: linear-gradient(135deg, var(--success-green), var(--success-light));
  border-color: var(--success-light);
  animation: correctAnswer 0.6s ease-out;
  box-shadow: 0 0 20px rgba(56, 161, 105, 0.4);
}

.optionButton.incorrect {
  background: linear-gradient(135deg, var(--error-red), var(--error-light));
  border-color: var(--error-light);
  animation: incorrectAnswer 0.6s ease-out;
  box-shadow: 0 0 20px rgba(229, 62, 62, 0.4);
}

@keyframes correctAnswer {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes incorrectAnswer {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
  100% {
    transform: translateX(0);
  }
}

/* Card de feedback */
.feedbackCard {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border-radius: var(--border-radius);
  padding: 1.5rem;
  text-align: center;
  animation: popIn 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  border: 1px solid rgba(255, 255, 255, 0.2);
  box-shadow: var(--card-shadow);
  position: relative;
  overflow: hidden;
}

.feedbackCorrect {
  border-left: 5px solid var(--success-green);
  background: linear-gradient(135deg, rgba(56, 161, 105, 0.1), rgba(104, 211, 145, 0.05));
}

.feedbackIncorrect {
  border-left: 5px solid var(--error-red);
  background: linear-gradient(135deg, rgba(229, 62, 62, 0.1), rgba(252, 129, 129, 0.05));
}

.feedbackText {
  font-size: 1.125rem;
  font-weight: 600;
  margin: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.feedbackCorrect .feedbackText {
  color: var(--success-light);
}

.feedbackIncorrect .feedbackText {
  color: var(--error-light);
}

.feedbackText::before {
  font-size: 1.5em;
}

.feedbackCorrect .feedbackText::before {
  content: 'üéâ';
  animation: bounce 0.6s ease-out;
}

.feedbackIncorrect .feedbackText::before {
  content: 'üí°';
  animation: shake 0.5s ease-out;
}

/* Bot√£o pr√≥xima pergunta */
.nextButton {
  background: linear-gradient(135deg, var(--accent-blue), #4299e1);
  color: var(--white);
  font-size: 1.125rem;
  font-weight: 600;
  padding: 1rem 2rem;
  border: none;
  border-radius: var(--border-radius);
  cursor: pointer;
  transition: var(--transition);
  box-shadow: var(--card-shadow);
  position: relative;
  overflow: hidden;
  animation: slideUp 0.6s ease-out;
  align-self: center;
  min-width: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

.nextButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.6s;
}

.nextButton:hover::before {
  left: 100%;
}

.nextButton:hover {
  transform: translateY(-2px) scale(1.02);
  box-shadow: var(--hover-shadow);
  background: linear-gradient(135deg, #4299e1, var(--accent-blue));
}

.nextButton:active {
  transform: translateY(0) scale(0.98);
  animation: pulse 0.2s ease-in-out;
}

.nextButton::after {
  content: '‚Üí';
  font-size: 1.2em;
  transition: transform 0.3s ease;
}

.nextButton:hover::after {
  transform: translateX(3px);
}

/* Bot√£o voltar */
.backButton {
  background: rgba(255, 255, 255, 0.1);
  color: var(--white);
  border: 2px solid rgba(255, 255, 255, 0.3);
  border-radius: var(--border-radius);
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: var(--transition);
  text-decoration: none;
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

.backButton:hover {
  background: rgba(255, 255, 255, 0.2);
  border-color: rgba(255, 255, 255, 0.5);
  transform: translateY(-1px);
}

.backButton::before {
  content: '‚Üê';
  font-size: 1.1em;
  transition: transform 0.3s ease;
}

.backButton:hover::before {
  transform: translateX(-3px);
}

/* Responsividade */
@media (max-width: 768px) {
  .container {
    padding: 1rem;
    gap: 1.5rem;
  }
  
  .header {
    flex-direction: column;
    gap: 1rem;
    align-items: stretch;
  }
  
  .questionCard {
    padding: 1.5rem;
  }
  
  .questionText {
    font-size: clamp(1.25rem, 5vw, 1.75rem);
  }
  
  .optionsGrid {
    grid-template-columns: 1fr;
    gap: 0.75rem;
    margin: 1.5rem 0;
  }
  
  .optionButton {
    padding: 1rem;
    font-size: 0.9rem;
    min-height: 70px;
  }
  
  .nextButton {
    padding: 0.875rem 1.75rem;
    font-size: 1rem;
    min-width: 180px;
  }
}

@media (max-width: 480px) {
  .container {
    padding: 0.75rem;
    gap: 1rem;
  }
  
  .questionCard {
    padding: 1rem;
  }
  
  .questionText {
    font-size: clamp(1.125rem, 4vw, 1.5rem);
  }
  
  .optionButton {
    padding: 0.875rem;
    font-size: 0.85rem;
    min-height: 60px;
  }
  
  .feedbackCard {
    padding: 1rem;
  }
  
  .feedbackText {
    font-size: 1rem;
  }
  
  .nextButton {
    padding: 0.75rem 1.5rem;
    font-size: 0.9rem;
    min-width: 160px;
  }
}

/* Anima√ß√µes globais */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes bounce {
  0%, 20%, 53%, 80%, 100% {
    transform: translate3d(0, 0, 0);
  }
  40%, 43% {
    transform: translate3d(0, -10px, 0);
  }
  70% {
    transform: translate3d(0, -5px, 0);
  }
  90% {
    transform: translate3d(0, -2px, 0);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
  20%, 40%, 60%, 80% { transform: translateX(3px); }
}

@keyframes popIn {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

/* Acessibilidade */
.optionButton:focus,
.nextButton:focus,
.backButton:focus {
  outline: 3px solid var(--warning-yellow);
  outline-offset: 2px;
}

/* Loading state para transi√ß√µes suaves */
.loading {
  opacity: 0.7;
  pointer-events: none;
}

.loading * {
  animation: none !important;
}

/* Estados de hover melhorados para dispositivos touch */
@media (hover: none) {
  .optionButton:hover,
  .nextButton:hover,
  .backButton:hover {
    transform: none;
    box-shadow: var(--card-shadow);
  }
}
